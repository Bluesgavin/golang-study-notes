(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{297:function(a,e,s){"use strict";s.r(e);var t=s(13),r=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"模块管理-module-maintenance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块管理-module-maintenance"}},[a._v("#")]),a._v(" 模块管理/module maintenance")]),a._v(" "),e("p",[a._v("前面说到了 package 是 Go 中的一个基础单位。但当我们开发一个应用时，一定会用到很多 package，此时，如果管理 package 就成了一个问题了。")]),a._v(" "),e("h2",{attrs:{id:"go-mod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#go-mod"}},[a._v("#")]),a._v(" go mod")]),a._v(" "),e("p",[a._v("go 提供了一个模块管理命令。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("go mod xxx\n")])])]),e("p",[a._v("可以执行帮助命令获取，命令详细信息")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("go "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" mod\n")])])]),e("h2",{attrs:{id:"创建模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建模块"}},[a._v("#")]),a._v(" 创建模块")]),a._v(" "),e("p",[a._v("我们可以在希望创建为模块的路径下执行以下命令：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("go mod init 【module名称】\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 也可以省略module名称，如果省略会默认使用当前文件夹名")]),a._v("\ngo mod init\n")])])]),e("p",[a._v("执行之后,当前目录下会创建一个"),e("code",[a._v("go.mod")]),a._v("文件，内容如下：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("module {{ module名称 }}\n\ngo {{ golang版本 }}\n")])])]),e("h2",{attrs:{id:"引用第三方-package"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用第三方-package"}},[a._v("#")]),a._v(" 引用第三方 package")]),a._v(" "),e("p",[a._v("如果只用 Go 的基础库，那么只需在代码中直接"),e("code",[a._v("import")]),a._v("即可。但如果用到第三方库，我们需要先从外网下载库，并使用。")]),a._v(" "),e("h3",{attrs:{id:"从公共库搜索-package"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从公共库搜索-package"}},[a._v("#")]),a._v(" 从公共库搜索 package")]),a._v(" "),e("p",[a._v("Go 提供了一个官方 packages 库，我们可以在上面搜索需要的 package。地址："),e("a",{attrs:{href:"https://pkg.go.dev/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://pkg.go.dev/"),e("OutboundLink")],1),e("br"),a._v("\n搜索到结果之后，可以点击进入查看 package 的文档。如果确认使用该 package，可以复制文档页顶部提供的复制按钮。如我现在要引用的是"),e("code",[a._v("quote")]),a._v("包，复制得到的结果为：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("rsc.io/quote/v4\n")])])]),e("h3",{attrs:{id:"引用方法-1-先-import"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用方法-1-先-import"}},[a._v("#")]),a._v(" 引用方法 1：先 import")]),a._v(" "),e("p",[a._v("接下来，我们可以正式引用这个 package 了。其中一个方法是先在代码中"),e("code",[a._v("import")]),a._v("该 package")]),a._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rsc.io/quote/v4"')]),a._v("\n")])])]),e("p",[a._v("然后执行命令")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("go mod tidy\n")])])]),e("p",[a._v("执行命令之后，Go 会扫描当前模块下的所有代码找到 import。如果 import 引用到的 package 没有在"),e("code",[a._v("go.mod")]),a._v("中注明，会帮我们自动写入"),e("code",[a._v("go.mod")]),a._v("并下载。相反如果"),e("code",[a._v("go.mod")]),a._v("中注明的 package，在代码中没有用到，就会在"),e("code",[a._v("go.mod")]),a._v("中去除。"),e("br"),a._v("\n执行后可以看到"),e("code",[a._v("go.mod")]),a._v("中多了下列内容：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("require (\n   rsc.io/sampler v1.3.0 // indirect\n)\n")])])]),e("p",[a._v("并且同目录下多了一个"),e("code",[a._v("go.sum")]),a._v("文件，这个文件记录了 hellomodule 的直接依赖和间接依赖包的相关版本的 hash 值，用来校验本地包的真实性。在构建的时候，如果本地依赖包的 hash 值与 go.sum 文件中记录的不一致，就会被拒绝构建。")]),a._v(" "),e("h3",{attrs:{id:"引用方法-2-先下载-package"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用方法-2-先下载-package"}},[a._v("#")]),a._v(" 引用方法 2：先下载 package")]),a._v(" "),e("p",[a._v("你也可以反过来，先在"),e("code",[a._v("go.mod")]),a._v("中注明需要用到的 package。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("//go.mod\nrequire rsc.io/quote/v4 v4.0.1\n")])])]),e("p",[a._v("执行命令下载依赖")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("go get "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\n")])])]),e("p",[a._v("执行之后会下载依赖，然后在对应的代码中"),e("code",[a._v("import")]),a._v("即可。")]),a._v(" "),e("h2",{attrs:{id:"模块运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块运行"}},[a._v("#")]),a._v(" 模块运行")]),a._v(" "),e("p",[a._v("运行模块的命令为：")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("go run "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),e("p",[a._v("注意，运行模块时，入口必须为 "),e("code",[a._v("package main")]),a._v("。 执行后，go 会自动搜索 main 入口，并运行程序。")])])}),[],!1,null,null,null);e.default=r.exports}}]);