(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{300:function(a,t,s){"use strict";s.r(t);var n=s(13),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"包-package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包-package"}},[a._v("#")]),a._v(" 包/package")]),a._v(" "),t("h2",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),t("p",[a._v("在 Go 语言中，"),t("code",[a._v("package")]),a._v(" 是一个基础概念，通常会把某些相关逻辑写在一个包中。一个项目由多个包组件，由此实现代码的拆分。在 Go 中没有“类”的概念，package 在某种程度上取代了“类”的角色。\n在所有的go代码中，都需要在最开头声明当前包的名字。")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义一个包main")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" a \n")])])]),t("h2",{attrs:{id:"引用package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用package"}},[a._v("#")]),a._v(" 引用package")]),a._v(" "),t("p",[a._v("我们可以在一个package中引用另一个package，关键字为"),t("code",[a._v("import")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 引用fmt包")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fmt"')]),a._v("\n")])])]),t("p",[a._v("Go 在引用包时，寻找的路径如下：")]),a._v(" "),t("ol",[t("li",[a._v("先是在$GOROOT/src路径下寻找")]),a._v(" "),t("li",[a._v("如果找不到，就到当前项目中的vendor路径下寻找")]),a._v(" "),t("li",[a._v("最后到到$GOPATH/src路径下寻找")])]),a._v(" "),t("h2",{attrs:{id:"调用包的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调用包的方法"}},[a._v("#")]),a._v(" 调用包的方法")]),a._v(" "),t("p",[a._v("在package中，我们可以用关键字"),t("code",[a._v("func")]),a._v("声明函数。但函数的名称以大写开头时，这个函数就可以被引用他的人用到，此时这个函数也叫方法。")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 假设有一个package person")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" person\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 声明Run为方法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 声明say为内部函数")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("此时如果我们引用了person")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"person"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 没问题")]),a._v("\n  person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 编译报错")]),a._v("\n  person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"更多引用的写法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更多引用的写法"}},[a._v("#")]),a._v(" 更多引用的写法")]),a._v(" "),t("h3",{attrs:{id:"引用多个包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用多个包"}},[a._v("#")]),a._v(" 引用多个包")]),a._v(" "),t("p",[a._v("在引用多个package时，我们可以用括号包起来")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"a"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"b"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"c"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h3",{attrs:{id:"别名引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#别名引用"}},[a._v("#")]),a._v(" 别名引用")]),a._v(" "),t("p",[a._v("当包名出现重复时，可以为包定义一个别名，为包名定义别名后对于该引用包的调用全都改用别名。")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义一个包A")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" a\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 为引用包c/a定义一个别名pkgA")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n     pkgA "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"c/a"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义一个A方法，调用别名为pkgA的包c/a中的方法Test()")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    pkgA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"匿名引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#匿名引用"}},[a._v("#")]),a._v(" 匿名引用")]),a._v(" "),t("p",[a._v("当包名出现重复时，除了为引用的包定义别名外，还可以使用关键字"),t("code",[a._v(".")]),a._v(",对于引用包的调用无需再指定包名。")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义一个包A")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" a\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 引用包c/a，并忽略其包名")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"c/a"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义一个A方法，调用包c/a中的方法Test()")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"package初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#package初始化"}},[a._v("#")]),a._v(" package初始化")]),a._v(" "),t("p",[a._v("除了前面提过的"),t("code",[a._v("main")]),a._v(",在package中还有一个特殊的函数"),t("code",[a._v("init")]),a._v("。在引用包时，会首先执行"),t("code",[a._v("init")]),a._v("方法，因此该方法一般用于除了一些初始化逻辑。")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义包a")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" a\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fmt"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义包初始化方法，在别的包引用到包a时，会首先执行该方法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        fmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Initialize the package here"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"初始化引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化引用"}},[a._v("#")]),a._v(" 初始化引用")]),a._v(" "),t("p",[a._v("如果你只想执行一下package的初始化方法，没有引用到其他。你可以用关键字"),t("code",[a._v("_")]),a._v(",声明只调用初始化")]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 引用包c/a,只调用到其中的init()方法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("_")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"c/a"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);