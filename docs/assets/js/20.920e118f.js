(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{288:function(t,e,a){"use strict";a.r(e);var n=a(13),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"整数-integer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整数-integer"}},[t._v("#")]),t._v(" 整数/Integer")]),t._v(" "),e("p",[t._v("整型表示数字整数，共分为两类：")]),t._v(" "),e("ul",[e("li",[t._v("有符号整型： 可以表示正负")]),t._v(" "),e("li",[t._v("无符号整型： 不能区分正负")])]),t._v(" "),e("p",[t._v("整型在内存中的表示包含两个部分：")]),t._v(" "),e("ul",[e("li",[t._v("符号位：记录正负")]),t._v(" "),e("li",[t._v("数字位：记录数值")])]),t._v(" "),e("h2",{attrs:{id:"有符号整型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有符号整型"}},[t._v("#")]),t._v(" 有符号整型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("长度(字节数)")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("值范围")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("int8")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("-128 ~127")])]),t._v(" "),e("tr",[e("td",[t._v("int16")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("-32768~32767")])]),t._v(" "),e("tr",[e("td",[t._v("int32")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("-2147483648~2147483647")])]),t._v(" "),e("tr",[e("td",[t._v("int64")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("-9223372036854775808~9223372036854775807")])]),t._v(" "),e("tr",[e("td",[t._v("int")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在 32 位平台为 4，在 64 位平台为 8")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在 32 位平台等同于 int32，在 64 位平台等同于 int64")])])])]),t._v(" "),e("h2",{attrs:{id:"无符号整型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#无符号整型"}},[t._v("#")]),t._v(" 无符号整型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("长度(字节数)")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("值范围")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("uint8")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("0~255")])]),t._v(" "),e("tr",[e("td",[t._v("uint16")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("0~65535")])]),t._v(" "),e("tr",[e("td",[t._v("uint32")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("0~4294967295")])]),t._v(" "),e("tr",[e("td",[t._v("uint64")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("0~18446744073709551615")])]),t._v(" "),e("tr",[e("td",[t._v("uint")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在 32 位平台为 4，在 64 位平台为 8")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在 32 位平台等同于 uint32，在 64 位平台等同于 uint64")])])])]),t._v(" "),e("h2",{attrs:{id:"定义整型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义整型"}},[t._v("#")]),t._v(" 定义整型")]),t._v(" "),e("p",[t._v("例子：定义整型")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("\nage "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" income "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\nincome "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n")])])]),e("h2",{attrs:{id:"转换陷阱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#转换陷阱"}},[t._v("#")]),t._v(" 转换陷阱")]),t._v(" "),e("p",[t._v("注意！不同类型的整型无法互相赋值，需要做类型转换。其中位数长的类型转换为位数短的类型，或者无符号的类型转换为有符号的类型时，会"),e("strong",[t._v("丢失准确性")]),t._v("。"),e("br"),t._v("\n例子：整型类型转换")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v1 "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v2 "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("\nv2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("int32")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);